NestJS : 자바스크립트 최신기능을 사용하는 웹 프레임워크 -> 좋은 구조를 가지고 있음
express는 최소한의 기능을 제공하는 반면 NestJS는 상대적으로 많은 기능 제공, 아키텍처 문제 효과적으로 해결 가능
현재까지 인기는 express가 더 좋지만, NestJS 커뮤니티도 발전 중
작은 규모의 프로젝트나 빠른 개발속도를 원하는 경우 express가 좋을 수 있음 : 설정 간단, node.js의 기본적인 기능 활용 가능
그러나 대규모 애플리케이션 개발이나 typescript를 선호하는 개발환경에서는 NestJS가 더 적합할 수 있다 : 타입 안정성과 모듈화 강조




NestJS는 웹 서버이므로 기본적으로 HTTP 요청/응답을 처리한다
HTTP 요청 처리 순서 : 가드(인증/인가) -> 인터셉터 -> 파이프(요청에 대한 유효성 검증) -> 컨트롤러(특정 함수에 값을 전달(라우팅)) -> 서비스(비즈니스 로직) -> 리포지토리(데이터 저장)

NestJS의 네이밍 규칙 : 
1) 파일명은 .으로 연결하고, 모듈이 둘 이상의 단어로 구성되어 있으면 대시로 연결
2) 클래스명은 낙타 표기법(단어 전체적으로 소문자를 사용하지만, 맨 첫 글자를 제외한 각 합성어의 첫 글자만 대문자로 표기)
3) 같은 디렉토리에 있는 클래스는 index.ts를 통해서 임포트