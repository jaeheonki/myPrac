{{!-- 상세 페이지 작성 : write로 작성한 게시물 보여주기, 수정/삭제 기능, 댓글 추가/표시/삭제 기능 --}}

<h1>{{title}}</h1>
{{#with post}}                                                                                 {{!with 사용하여 post.붙이지 않고 코드 작성}}
<h2 class="text-xl">제목입니다.</h2>                                                            {{!게시글 제목 표시 영역}}
<div>
    작성자: <b>{{writer}}</b>                                                                   {{!작성자 이름 영역}}
</div>
<div>
    조회수 : {{hits}} | 작성일시 : {{dateString createdDt}}                                      {{!조회수/작성일시 영역, 커스텀 헬퍼 함수 dateString 사용}}
    <button onclick = "modifyPost()">수정</button>                                              {{!게시글 관련 버튼 영역}}
    <button onclick = "deletePost()">삭제</button> 
</div>

<div>
    <pre>{{content}} </pre>                                                                     {{!본문 영역}}
</div>

<section>
    <div>
        <h3>{{lengthOfList comments}}개의 댓글이 있습니다. </h3>                                                          {{!댓글 개수 표시 영역, LengthOfList 커스텀 헬퍼 사용용}}
    </div>

    <form method = "post" action="/write_comment">                                              {{!댓글 작성 폼, write-comment api 호출}}
        <input type = "hidden" name = "id" value = "{{_id}}" />
        <div>
            <div>
                <input type = "text" name = "name" placeholder = "이름"/>
                <input type = "password" name = "password" placeholder="비밀번호"/>
            </div>
            <div>
                <textarea cols = "40" rows = "3" name = "comment" placeholder="댓글을 입력해주세요."></textarea>
                <br /><br /><button>댓글쓰기</button>                                               {{!댓글 전송 버튼}}
            </div>
        </div>
    </form>
</section>
{{! 댓글 표시 영역}}
<section>
    {{#each comments}}
    <div>
        <div>
            작성자 : <b>{{name}}</b>
        </div>
        <div>
            작성일시 : {{dateString createdDt}}
            <button onclick="deleteComment('{{idx}}')">삭제</button>
        </div>
    </div>
    <div>
        <pre>{{comment}}</pre>
    </div>
    {{/each}}
</section>
{{/with}}

<footer>
    <div>
        <a href = "/">목록으로</a>  {{!목록으로 가는 링크 }}
    </div>
</footer>
<script>
    const postOption = {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
    }

//글 수정 함수
    async function modifyPost() {
        const password = prompt("패스워드를 입력해주세요");               //내장된 프롬프트 사용
        if(!password){
            return;
        }

        const result = await fetch("/check_password", {                     //fetch(url, option) 함수 실행 - url : 호출할 api의 경로, option : method, headers, body 등의 데이터
            ...postOption,
            body: JSON.stringify({ id: "{{post._id}}", password })          //JSON타입을 문자열의 형태로 변경해주는 stringify 함수 사용
        });

        const data = await result.json();                                   //json함수를 실행하는 경우에도 결괏값이 Promise이기 때문에 await를 사용해야 한다

        console.log(password); // Check if password is captured correctly
        console.log(data);     // Check the response data from the server

        if(data.isExist) {
            document.location = "/modify/{{post._id}}"                       //패스워드가 올바른 경우(if data.isExist) 수정 페이지로 이동
        }else{
            alert("패스워드가 올바르지 않습니다.");
        }
    }

    const deleteOption = {
        method : 'DELETE',
        headers: {
            'Content-Type' : 'application/json',
        },
    }
//글 삭제 함수
    async function deletePost() {
        const password = prompt("삭제하려면 패스워드를 입력해주세요");
        if(!password){
            return;
        }

        const result = await fetch("/delete", {                         //fetch 브라우저 api를 이용해 AJAX 통신, method : DELETE
            ...deleteOption,
            body: JSON.stringify({ id: "{{post._id}}", password})
        });

        const data = await result.json();
        if (!data.isSuccess){
            alert("삭제에 실패했습니다. 패스워드를 확인해주세요.");
            return;
        }

        document.location = "/";                                        //성공하면 리스트 페이지로 이동
       }
</script>

<script>
    async function deleteComment(idx) {
        const password = prompt("삭제하려면 패스워드를 입력해주세요");
        if (!password) {                                                        //프롬프트에서 취소를 누른 경우 처리
            return;
        }

    const result = await fetch("/delete_comment", {                             //fetch로 AJAX 통신신
        ...deleteOption,
        body: JSON.stringify({ id: "{{post._id}}", idx, password })
    });

    const data = await result.json();                                           //서버에서 실행에 대한 응답을 JSON형식으로 내려줌 : boolean 타입
    if(!data.isSuccess) {
        alert("삭제 실패, 패스워드를 확인해주세요.");
        return;
    }

    alert("삭제 성공! ");
    document.location.reload();
    }
</script>